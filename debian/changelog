python-application (1.3.2) unstable; urgency=low

  * Fixed the preserve_signature decorator to work with python < 2.7

 -- Dan Pascu <dan@ag-projects.com>  Thu, 12 Jul 2012 22:23:21 +0300

python-application (1.3.1) unstable; urgency=low

  * Added workaround for logging unicode and string objects
  * Don't apply str over log records diverted from Twisted
  * Fixed the wrapper's default arguments when preserving function signatures
  * Bumped Standards-Version to 3.9.3

 -- Dan Pascu <dan@ag-projects.com>  Mon, 11 Jun 2012 10:11:17 +0300

python-application (1.3.0) unstable; urgency=low

  * Fixed cleaning up observer weakref proxies after recent Singleton changes
  * Return False instead of 0 from NullType.__nonzero__
  * Made Null only compare equal with itself
  * Removed obsolete application.python.util module

 -- Dan Pascu <dan@ag-projects.com>  Tue, 09 Aug 2011 18:55:15 +0300

python-application (1.2.9) unstable; urgency=low

  * Renamed Singleton's internal attribute to make them less obtrusive
  * Fixed detection for the class's __new__ in Singleton
  * Added execute_once decorator

 -- Dan Pascu <dan@ag-projects.com>  Tue, 12 Jul 2011 11:26:07 +0300

python-application (1.2.8) unstable; urgency=low

  * Reorganized the application.python package contents
  * Added the limit function to restrict a numeric value to a given range
  * Added function to recursively create directory and ignore error if exists
  * Added classproperty descriptor for defining properties at the class level
  * Removed obsolete default_host_ip attribute from application.system
  * Improved Null to better act as a class substitute

 -- Saul Ibarra <saul@ag-projects.com>  Tue, 07 Jun 2011 12:11:09 +0200

python-application (1.2.7) unstable; urgency=low

  * Release EventQueue events immediately after processing

 -- Dan Pascu <dan@ag-projects.com>  Tue, 22 Mar 2011 15:14:22 +0200

python-application (1.2.6) unstable; urgency=low

  * Use the system path separator when building the list of packages
  * Fixed handling of unicode in the syslog logger

 -- Dan Pascu <dan@ag-projects.com>  Wed, 16 Feb 2011 17:30:00 +0200

python-application (1.2.5) unstable; urgency=low

  * Fixed syslog on platforms that do not support it
  * Added outgoing_ip_for method to host object
  * Bumped Standards-Version to 3.9.1
  * Added debian/source/format

 -- Lucian Stanescu <luci@ag-projects.com>  Tue, 17 Aug 2010 17:32:22 +0300

python-application (1.2.4) unstable; urgency=low

  * Added NullType in order to allow Null to be pickled
  * Made NullType a singleton to prevent multiple instances when unpickling

 -- Dan Pascu <dan@ag-projects.com>  Thu, 25 Mar 2010 22:00:28 +0200

python-application (1.2.3) unstable; urgency=low

  * Improved memory_dump's output using console size information
  * Added support for detecting object cycles in application.debug.memory
  * Added Lucian Stanescu to Uploaders list
  * Bumped Standards-Version to 3.8.4

 -- Lucian Stanescu <luci@ag-projects.com>  Wed, 17 Feb 2010 16:07:30 +0000

python-application (1.2.2) unstable; urgency=low

  * Made Null from application.python.util an instance. See NEWS.
  * Improved processing speed for post_notification.

 -- Dan Pascu <dan@ag-projects.com>  Tue, 02 Feb 2010 17:05:15 +0200

python-application (1.2.1) unstable; urgency=low

  * Added the missing application.log package to the build

 -- Dan Pascu <dan@ag-projects.com>  Wed, 09 Dec 2009 16:54:09 +0200

python-application (1.2.0) unstable; urgency=low

  * Modified Null not to return self for __setattr__ and __delattr__
  * Added indexing support for the Null class
  * Allow a Null object to be a descriptor
  * Added __len__ method to the Null class
  * Added iteration support for the Null class
  * Added __contains__ method to the Null class
  * Added context management support to the Null class
  * Added discard_observer method to NotificationCenter
  * Added comment to clarify behaviour
  * Fixed threading issues with adding and removing observers
  * Fixed handling of settings which contain uppercase characters and dashes
  * Added support for weakly referencing observers in the notification system
  * Added example of how to have a weakly referenced notification observer
  * Removed deprecated functionality
  * Added purge_observer method on NotificationCenter
  * Added dynamic host properties to application.system
  * Removed resolution test from Hostname configuration datatype
  * Improved error message for invalid type in IPAddress
  * Removed twisted logging backend and added a logging extension for twisted
  * Improved logging functions and added some commonly used aliases
  * Fixed initial setting of the current log level
  * Added debian runtime dependency on python2.5 or newer
  * Removed debian Suggests for python-twisted-core
  * Bumped debian standards version to 3.8.3

 -- Dan Pascu <dan@ag-projects.com>  Tue, 08 Dec 2009 18:42:16 +0200

python-application (1.1.5) unstable; urgency=low

  * Made a ConfigSection iterable as (name, value) pairs
  * Modified ConfigSetting to allow any callable to be used as a validator
  * Fixed __import__ statement to work with python older than 2.5
  * Refactored ConfigSectionMeta to decouple it from ConfigSetting
  * Save ConfigSetting's initial default values as cls.__defaults__
  * Added __delattr__ on ConfigSectionMeta to prevent deletion of settings
  * Added a mechanism to skip applying the type for a ConfigSetting
  * Added set/reset capabilities to ConfigSection
  * Enhanced ConfigFile.get_section with filtering and default return value
    for missing section capabilities
  * Reworded docstrings to fit in width on a standard terminal
  * Allow ConfigSection.__configfile__ to be an instance of ConfigFile too
  * Added read capabilities directly on ConfigSection classes
  * Improved caching mechanism in ConfigFile
  * Use ConfigSection's read capabilities instead of ConfigFile.read_settings
  * Added support for specifying the configuration file type in ConfigSection
  * Deprecated ConfigFile.read_settings and dump_settings
  * Added local_config_directory property on Process
  * Deprecated using __configfile__ in favor of __cfgfile__ on ConfigSection
  * Added filename attribute to ConfigFile instances
  * Added __str__ representation to ConfigSection
  * Added tracing capabilities to ConfigSection
  * Replaced dump_settings function body with printing the class
  * Updated ConfigSection's docstring to describe the special attributes
  * Rephrased exception message for clarity
  * Modified data type converters to accept what they generate as input
  * Updated examples to match the latest configuration API changes

 -- Dan Pascu <dan@ag-projects.com>  Wed, 29 Jul 2009 21:50:13 +0300

python-application (1.1.4) unstable; urgency=low

  * Allow version numbers without the micro or minor number
  * Added concept of undefined version that compares lower than any other
  * Added missing entry about notification.py example
  * Added dependency module and example

 -- Dan Pascu <dan@ag-projects.com>  Mon, 20 Jul 2009 13:14:18 +0300

python-application (1.1.3) unstable; urgency=low

  * Added isdescriptor function to application.python.descriptor
  * Fixed handling of special attributes in ConfigSection subclasses
  * Fixed ConfigSection behaviour with multi-level inheritance

 -- Dan Pascu <dan@ag-projects.com>  Mon, 13 Jul 2009 08:58:55 +0300

python-application (1.1.2) unstable; urgency=low

  * Deprecated config_directory in favor of system_config_directory
  * No longer raise an expection when setting the system config directory,
    if the directory doesn't exist
  * Changed datatypes.Boolean into a validator
  * Added ConfigSetting descriptor that is meant to deprecate the use of the
    _datatypes mapping when declaring setting types inside a ConfigSection
  * Deprecated ConfigFile.get_option in favor ConfigFile.get_setting
  * Added support for specifying a config file and section in ConfigSection
  * Fixed memory leak caused by ThreadLocal not releasing some internal data
  * Added WriteOnceAttribute descriptor
  * Added note about restrictions that apply when using the new descriptors
  * Added version module
  * Bumped debian standards version to 3.8.2
  * Fixed lintian warning about missing misc:Depends dependency
  * Modified examples to honor the latest changes in the API

 -- Dan Pascu <dan@ag-projects.com>  Tue, 07 Jul 2009 22:01:01 +0300

python-application (1.1.1) unstable; urgency=low

  * By default show rate when measuring timing
  * For better visibility log deprecation warning with log.warn
  * Deprecated _defaultPort and _name in favor of default_port and name
  * Use a better description for an endpoint address
  * Define log levels ALL and NONE consistently with the others
  * Added LogLevel configuration datatype
  * Replaced deprecated startSyslog with start_syslog in examples

 -- Dan Pascu <dan@ag-projects.com>  Mon, 30 Mar 2009 08:35:15 +0300

python-application (1.1.0) unstable; urgency=low

  * Allow process.runtime_file(None) and return None for it
  * Switched from python-central to python-support
  * Enhanced the Singleton metaclass to properly handle classes that take
    arguments in __init__ and/or __new__
  * Extended singleton example with classes that take arguments to __init__
  * Added descriptor that allows objects to have thread specific attributes
  * Added a new module that implements a notification system
  * Added example script for notification system
  * Do not indent subsequent lines in a multi line log in syslog
  * Simplified logging of multilines in syslog
  * Specify the priority when logging to syslog, based on the message type
  * Implemented fallback log capabilities via the logging module
  * Added prefix to debug log records with twisted backend
  * Add prefix to log lines when logging to console with twisted backend
  * Added log level support to application.log module
  * Removed system identifier when logging to syslog in twisted backend
  * Added start_syslog function and deprecated startSyslog variant
  * Updated README with information about the new notification module
  * Added NEWS file to document user visible changes between versions
  * Updated debian description to include the new notification system
  * Updated debian dependencies
  * Bumped debian standards version

 -- Dan Pascu <dan@ag-projects.com>  Tue, 10 Feb 2009 04:30:14 +0200

python-application (1.0.9) unstable; urgency=low

  * Better method to determine the default host IP address.
  * Renamed host_ip to default_host_ip for clarity.
  * Renamed application/util.py to application/system.py

 -- Dan Pascu <dan@ag-projects.com>  Tue, 04 Sep 2007 21:54:29 +0300

python-application (1.0.8) unstable; urgency=low

  * Do not automatically import the timing module when the debug
    module is imported.
  * Made Process and Signals singletons.
  * Added some docstrings and rephrased others.
  * Updated util module description.
  * Removed some obsolete commented code.
  * Added some usage examples.
  * Do not compress .py and .ini example files.
  * Renamed mixed case functions in the configuration module to use
    names with underscores for consistency.
  * Renamed argument otype to type in the get_option function.
  * Renamed thisHostIP to host_ip.
  * Generalized configuration handling by adding the ConfigFile class.
    With this multiple distinct configuration files can be handled at the
    same time and it makes it easier to specify the configuration file name
    from the application than the less flexible module file name attribute.
  * Removed configuration module functions which were made obsolete by the
    addition of ConfigFile.
  * Replaced _dataTypes attribute on ConfigSection with _datatypes.

 -- Dan Pascu <dan@ag-projects.com>  Fri, 24 Aug 2007 14:57:05 +0300

python-application (1.0.7) unstable; urgency=low

  * Increased version to build against python2.5 as well.

 -- Dan Pascu <dan@ag-projects.com>  Thu, 10 May 2007 20:32:20 +0300

python-application (1.0.6) unstable; urgency=low

  * Added missing import in the queue module.

 -- Dan Pascu <dan@ag-projects.com>  Tue, 30 Jan 2007 22:28:04 +0200

python-application (1.0.5) unstable; urgency=low

  * Added methods for controlling the event processing workflow
     - pause/unpause/resume - to control event processing
     - accept_events/ingore_events - to control event acceptance
     - empty - to purge events already on the queue
  * Allow unhandled events in a CumulativeEventQueue to be preserved.
  * Capture unhandled exceptions from a queue's event handler.
  * Fixed some docstrings and error messages in the queue module.

 -- Dan Pascu <dan@ag-projects.com>  Sun, 28 Jan 2007 06:13:52 +0200

python-application (1.0.4) unstable; urgency=low

  * Added application.python.queue module.

 -- Dan Pascu <dan@ag-projects.com>  Sat, 27 Jan 2007 05:29:17 +0200

python-application (1.0.3) unstable; urgency=low

  * Added usage example for the decorator module.

 -- Dan Pascu <dan@ag-projects.com>  Mon, 22 Jan 2007 17:01:29 +0200

python-application (1.0.2) unstable; urgency=low

  * Added application.python submodule. It contains python related utilities
    and helpers (currently it contains the decorator and util modules).
  * Added decorator support in application.python.decorator.
  * Moved the Singleton and Null classes from application.util to
    application.python.util.
  * Updated years in copyright info.

 -- Dan Pascu <dan@ag-projects.com>  Sun, 21 Jan 2007 19:10:52 +0200

python-application (1.0.1) unstable; urgency=low

  * Fixed issue with printing the memory dump in multithreaded environments.
  * Ignore one time collectable garbage generated before the memory debug
    module is imported.

 -- Dan Pascu <dan@ag-projects.com>  Mon,  8 Jan 2007 17:43:26 +0200

python-application (1.0.0) unstable; urgency=medium

  * Initial release.

 -- Dan Pascu <dan@ag-projects.com>  Sat, 16 Dec 2006 08:23:41 +0200

