python-application (1.1.3) unstable; urgency=low

  * Added isdescriptor function to application.python.descriptor
  * Fixed handling of special attributes in ConfigSection subclasses
  * Fixed ConfigSection behaviour with multi-level inheritance

 -- Dan Pascu <dan@ag-projects.com>  Mon, 13 Jul 2009 08:58:55 +0300

python-application (1.1.2) unstable; urgency=low

  * Deprecated config_directory in favor of system_config_directory
  * No longer raise an expection when setting the system config directory,
    if the directory doesn't exist
  * Changed datatypes.Boolean into a validator
  * Added ConfigSetting descriptor that is meant to deprecate the use of the
    _datatypes mapping when declaring setting types inside a ConfigSection
  * Deprecated ConfigFile.get_option in favor ConfigFile.get_setting
  * Added support for specifying a config file and section in ConfigSection
  * Fixed memory leak caused by ThreadLocal not releasing some internal data
  * Added WriteOnceAttribute descriptor
  * Added note about restrictions that apply when using the new descriptors
  * Added version module
  * Bumped debian standards version to 3.8.2
  * Fixed lintian warning about missing misc:Depends dependency
  * Modified examples to honor the latest changes in the API

 -- Dan Pascu <dan@ag-projects.com>  Tue, 07 Jul 2009 22:01:01 +0300

python-application (1.1.1) unstable; urgency=low

  * By default show rate when measuring timing
  * For better visibility log deprecation warning with log.warn
  * Deprecated _defaultPort and _name in favor of default_port and name
  * Use a better description for an endpoint address
  * Define log levels ALL and NONE consistently with the others
  * Added LogLevel configuration datatype
  * Replaced deprecated startSyslog with start_syslog in examples

 -- Dan Pascu <dan@ag-projects.com>  Mon, 30 Mar 2009 08:35:15 +0300

python-application (1.1.0) unstable; urgency=low

  * Allow process.runtime_file(None) and return None for it
  * Switched from python-central to python-support
  * Enhanced the Singleton metaclass to properly handle classes that take
    arguments in __init__ and/or __new__
  * Extended singleton example with classes that take arguments to __init__
  * Added descriptor that allows objects to have thread specific attributes
  * Added a new module that implements a notification system
  * Added example script for notification system
  * Do not indent subsequent lines in a multi line log in syslog
  * Simplified logging of multilines in syslog
  * Specify the priority when logging to syslog, based on the message type
  * Implemented fallback log capabilities via the logging module
  * Added prefix to debug log records with twisted backend
  * Add prefix to log lines when logging to console with twisted backend
  * Added log level support to application.log module
  * Removed system identifier when logging to syslog in twisted backend
  * Added start_syslog function and deprecated startSyslog variant
  * Updated README with information about the new notification module
  * Added NEWS file to document user visible changes between versions
  * Updated debian description to include the new notification system
  * Updated debian dependencies
  * Bumped debian standards version

 -- Dan Pascu <dan@ag-projects.com>  Tue, 10 Feb 2009 04:30:14 +0200

python-application (1.0.9) unstable; urgency=low

  * Better method to determine the default host IP address.
  * Renamed host_ip to default_host_ip for clarity.
  * Renamed application/util.py to application/system.py

 -- Dan Pascu <dan@ag-projects.com>  Tue, 04 Sep 2007 21:54:29 +0300

python-application (1.0.8) unstable; urgency=low

  * Do not automatically import the timing module when the debug
    module is imported.
  * Made Process and Signals singletons.
  * Added some docstrings and rephrased others.
  * Updated util module description.
  * Removed some obsolete commented code.
  * Added some usage examples.
  * Do not compress .py and .ini example files.
  * Renamed mixed case functions in the configuration module to use
    names with underscores for consistency.
  * Renamed argument otype to type in the get_option function.
  * Renamed thisHostIP to host_ip.
  * Generalized configuration handling by adding the ConfigFile class.
    With this multiple distinct configuration files can be handled at the
    same time and it makes it easier to specify the configuration file name
    from the application than the less flexible module file name attribute.
  * Removed configuration module functions which were made obsolete by the
    addition of ConfigFile.
  * Replaced _dataTypes attribute on ConfigSection with _datatypes.

 -- Dan Pascu <dan@ag-projects.com>  Fri, 24 Aug 2007 14:57:05 +0300

python-application (1.0.7) unstable; urgency=low

  * Increased version to build against python2.5 as well.

 -- Dan Pascu <dan@ag-projects.com>  Thu, 10 May 2007 20:32:20 +0300

python-application (1.0.6) unstable; urgency=low

  * Added missing import in the queue module.

 -- Dan Pascu <dan@ag-projects.com>  Tue, 30 Jan 2007 22:28:04 +0200

python-application (1.0.5) unstable; urgency=low

  * Added methods for controlling the event processing workflow
     - pause/unpause/resume - to control event processing
     - accept_events/ingore_events - to control event acceptance
     - empty - to purge events already on the queue
  * Allow unhandled events in a CumulativeEventQueue to be preserved.
  * Capture unhandled exceptions from a queue's event handler.
  * Fixed some docstrings and error messages in the queue module.

 -- Dan Pascu <dan@ag-projects.com>  Sun, 28 Jan 2007 06:13:52 +0200

python-application (1.0.4) unstable; urgency=low

  * Added application.python.queue module.

 -- Dan Pascu <dan@ag-projects.com>  Sat, 27 Jan 2007 05:29:17 +0200

python-application (1.0.3) unstable; urgency=low

  * Added usage example for the decorator module.

 -- Dan Pascu <dan@ag-projects.com>  Mon, 22 Jan 2007 17:01:29 +0200

python-application (1.0.2) unstable; urgency=low

  * Added application.python submodule. It contains python related utilities
    and helpers (currently it contains the decorator and util modules).
  * Added decorator support in application.python.decorator.
  * Moved the Singleton and Null classes from application.util to
    application.python.util.
  * Updated years in copyright info.

 -- Dan Pascu <dan@ag-projects.com>  Sun, 21 Jan 2007 19:10:52 +0200

python-application (1.0.1) unstable; urgency=low

  * Fixed issue with printing the memory dump in multithreaded environments.
  * Ignore one time collectable garbage generated before the memory debug
    module is imported.

 -- Dan Pascu <dan@ag-projects.com>  Mon,  8 Jan 2007 17:43:26 +0200

python-application (1.0.0) unstable; urgency=medium

  * Initial release.

 -- Dan Pascu <dan@ag-projects.com>  Sat, 16 Dec 2006 08:23:41 +0200

